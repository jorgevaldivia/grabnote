require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.

describe Project::CommentsController do
  include Devise::TestHelpers
  render_views

  # This should return the minimal set of attributes required to create a valid
  # Project::Comment. As you add validations to Project::Comment, be sure to
  # adjust the attributes here as well.
  let(:valid_attributes) { { body: "some text" } }

  describe "POST create" do
    it "creates an activity and a comment in a project" do
      Project.stub(:find).with('1').and_return FactoryGirl.build(:project)
      expect {
        post :create, {project_id: 1, project_comment: valid_attributes}, :format => :json
      }.to change(Project::Comment, :count).by(1)
      #comment = Project::Comment.create! valid_attributes
      #post :create, {}, valid_session
      #assigns(:notebook_notes).should eq([note])
    end
  end
end
